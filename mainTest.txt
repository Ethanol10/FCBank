/* TESTING */
		/*Accounts for Single.*/
	account_t account1;
	account1.id = 11100;
	account1.balance = 999;
	account1.pin = 3541;
	account1.fname[0] = 'e';
	account1.fname[1] = 't';
	account1.fname[2] = 'h';
	account1.fname[3] = 'a';
	account1.fname[4] = 'n';
	account1.fname[5] = '\0';
	account1.lname[0] = 'e';
	account1.lname[1] = 't';
	account1.lname[2] = 'h';
	account1.lname[3] = 'a';
	account1.lname[4] = 'n';
	account1.lname[5] = '\0';

	account_t account2;
	account2.id = 9999;
	account2.balance = 1;
	account2.pin = 3014;
	account2.fname[0] = 'e';
	account2.fname[1] = 't';
	account2.fname[2] = 'h';
	account2.fname[3] = 'a';
	account2.fname[4] = 'n';
	account2.fname[5] = '\0';
	account2.lname[0] = 'e';
	account2.lname[1] = 't';
	account2.lname[2] = 'h';
	account2.lname[3] = 'a';
	account2.lname[4] = 'n';
	account2.lname[5] = '\0';

	appendSingleAccNode(account1, headAcc);
	appendSingleAccNode(account2, headAcc);

	/*Accounts for Joint*/
	jointAccount_t account3;
	account3.userID1 = 11111;
	account3.userID2 = 22222;
	account3.balance = 20202;
	account3.userPin1 = 2222;
	account3.userPin2 = 1111;
	account3.fname1[0] = 'e';
	account3.fname1[1] = 't';
	account3.fname1[2] = 'h';
	account3.fname1[3] = 'a';
	account3.fname1[4] = 'n';
	account3.fname1[5] = '\0';
	account3.lname1[0] = 'e';
	account3.lname1[1] = 't';
	account3.lname1[2] = 'h';
	account3.lname1[3] = 'a';
	account3.lname1[4] = 'n';
	account3.lname1[5] = '\0';
	account3.fname2[0] = 'e';
	account3.fname2[1] = 't';
	account3.fname2[2] = 'h';
	account3.fname2[3] = 'a';
	account3.fname2[4] = 'n';
	account3.fname2[5] = '\0';
	account3.lname2[0] = 'e';
	account3.lname2[1] = 't';
	account3.lname2[2] = 'h';
	account3.lname2[3] = 'a';
	account3.lname2[4] = 'n';
	account3.lname2[5] = '\0';

	jointAccount_t account4;
	account4.userID1 = 12121;
	account4.userID2 = 23232;
	account4.balance = 10;
	account4.userPin2 = 9090;
	account4.userPin1 = 9987;
	account4.fname1[0] = 'e';
	account4.fname1[1] = 't';
	account4.fname1[2] = 'h';
	account4.fname1[3] = 'a';
	account4.fname1[4] = 'n';
	account4.fname1[5] = '\0';
	account4.lname1[0] = 'e';
	account4.lname1[1] = 't';
	account4.lname1[2] = 'h';
	account4.lname1[3] = 'a';
	account4.lname1[4] = 'n';
	account4.lname1[5] = '\0';
	account4.fname2[0] = 'e';
	account4.fname2[1] = 't';
	account4.fname2[2] = 'h';
	account4.fname2[3] = 'a';
	account4.fname2[4] = 'n';
	account4.fname2[5] = '\0';
	account4.lname2[0] = 'e';
	account4.lname2[1] = 't';
	account4.lname2[2] = 'h';
	account4.lname2[3] = 'a';
	account4.lname2[4] = 'n';
	account4.lname2[5] = '\0';

	appendJointAccNode(account3, headJointAcc);
	appendJointAccNode(account4, headJointAcc);
	/* TEST INPUTS */
	
	
	printf("Account3u1 = %d\n", (*findJointNode(11111,headJointAcc)).account.userID1);
	printf("Account3u2 = %d\n", (*findJointNode(22222,headJointAcc)).account.userID2);
	printf("Account4u1 = %d\n", (*findJointNode(12121,headJointAcc)).account.userID1);
	printf("Account4u2 = %d\n", (*findJointNode(23232,headJointAcc)).account.userID2);
	
	removeSingleAccNode((*findSingleNode(11100, headAcc)).account, headAcc);
	removeJointAccNode((*findJointNode(11111, headJointAcc)).account, headJointAcc);
	
	printf("ID1 = %d\n", (*findSingleNode(9999,headAcc)).account.id);
	if(findSingleNode(11100,headAcc) == NULL){
		printf("SUCCESS!");
	}
	if(findJointNode(11111,headJointAcc) == NULL){
		printf("SUCCESS!!");
	}
	printf("Account4u1 = %d\n", (*findJointNode(23232,headJointAcc)).account.userID1);
	/* End Program */
	